
1) What is the difference between the Thread and Runnable?
    By implementing Runnable, multiple threads can share an instance of your work.
    If you extended Thread, you'd have to create a new instance of your work for each thread.

2) How do you start a thread using Runnable?
    newThread.start();

3) How do you start a thread using Thread?
    start();

4) How do you get a thread's name?
    by using getName() method

5) What does the "synchronize()" method do?
    enable a simple strategy for preventing thread interference and memory consistency errors
    if an object is visible to more than one thread,
    all reads or writes to that object's variables are done through synchronized methods.

6) What does the "join()" method do?
    it causes the currently running threads to stop executing until the thread it joins with completes its task.

7) What does the "sleep()" method do?
    suspends execution for a specified period

8) What is the one method you must write if you're implementing the Runnable class?
    public void run()

9) Should you create that same method if you're extending Thread?
    yes

10) Why is multi-threading so cool?
    Because it allows concurrent execution of two or more parts of a program for maximum utilization of CPU
